%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Tk Canvas Widget
%%For: Kristian Hartikainen
%%Title: Window .top.draw.canvas
%%CreationDate: Thu Oct 22 16:22:38 2015
%%BoundingBox: -7 298 620 496
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%DocumentNeededResources: font .sfNsText
%%EndComments

%%BeginProlog
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def

50 dict begin
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% RCS: @(#) $Id$

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


/cstringshow {
    {
	dup type /stringtype eq
	{ show } { glyphshow }
	ifelse
    }
    forall
} bind def



/cstringwidth {
    0 exch 0 exch
    {
	dup type /stringtype eq
	{ stringwidth } { 
	    currentfont /Encoding get exch 1 exch put (\001) stringwidth 
        }
	ifelse 
	exch 3 1 roll add 3 1 roll add exch
    }
    forall
} bind def

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to current system encoding.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding CurrentEncoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	cstringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup cstringwidth pop
	justify neg mul 0 moveto
	stipple {
	   
 
	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		dup type /stringtype eq {
		    % This segment is a string.
		    {
		        char 0 3 -1 roll put
		        currentpoint
		        gsave
		        char true charpath clip StippleText
		        grestore
		        char stringwidth translate
		        moveto
		    } forall
		} {
		    % This segment is glyph name
		    % Temporary override
		    currentfont /Encoding get exch 1 exch put
		    currentpoint
		    gsave (\001) true charpath clip StippleText
		    grestore
	            (\001) stringwidth translate
		    moveto
		} ifelse
	    } forall
	    grestore 
	} {cstringshow} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog
%%BeginSetup
/CL 2 def
%%IncludeResource: font .sfNsText
%%EndSetup

%%Page: 1 1
save
306.0 396.0 translate
1 1 scale
-313 -98 translate
0 197 moveto 626 197 lineto 626 0 lineto 0 0 lineto closepath clip newpath
gsave
611 115 moveto
611 79 lineto
551 79 lineto
561 97 lineto
551 115 lineto
611 115 lineto
0.941 0.941 0.941 setrgbcolor AdjustColor
eofill
611 115 moveto
611 79 lineto
551 79 lineto
561 97 lineto
551 115 lineto
611 115 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
120 122 moveto
140 97 lineto
120 72 lineto
100 97 lineto
120 122 lineto
0.941 0.941 0.941 setrgbcolor AdjustColor
eofill
120 122 moveto
140 97 lineto
120 72 lineto
100 97 lineto
120 122 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
9 115 moveto
9 79 lineto
59 79 lineto
69 97 lineto
59 115 lineto
9 115 lineto
0.941 0.941 0.941 setrgbcolor AdjustColor
eofill
9 115 moveto
9 79 lineto
59 79 lineto
69 97 lineto
59 115 lineto
9 115 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
69 97 moveto
95.1425305626964 97 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
100 97 moveto
89.999 100.501 lineto
91.7133673236218 97.5 lineto
91.7133673236218 96.5 lineto
89.999 93.499 lineto
100 97 lineto
fill
grestore
gsave
/.sfNsText findfont 13 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
120 132 [
[(select app)]
] 16 -0.5 0.5 0 false DrawText
grestore
gsave
/.sfNsText findfont 13 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
583 97 [
[(OUT)]
] 16 -0.5 0.5 0 false DrawText
grestore
gsave
/.sfNsText findfont 13 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
36 97 [
[(IN)]
] 16 -0.5 0.5 0 false DrawText
grestore
gsave
291 149 moveto
333 149 lineto
333 125 lineto
291 125 lineto
291 149 lineto
0.941 0.941 0.941 setrgbcolor AdjustColor
eofill
291 149 moveto
333 149 lineto
333 125 lineto
291 125 lineto
291 149 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
277 149 moveto
291 149 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
277 125 moveto
291 125 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
305 125 moveto
305 149 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
319 125 moveto
319 149 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
315 169 moveto 20 0 rlineto 0 -12 rlineto -20 0 rlineto closepath
0.941 0.941 0.941 setrgbcolor AdjustColor
fill
315 169 moveto 20 0 rlineto 0 -12 rlineto -20 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
206 69 moveto
248 69 lineto
248 45 lineto
206 45 lineto
206 69 lineto
0.941 0.941 0.941 setrgbcolor AdjustColor
eofill
206 69 moveto
248 69 lineto
248 45 lineto
206 45 lineto
206 69 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
192 69 moveto
206 69 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
192 45 moveto
206 45 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
220 45 moveto
220 69 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
234 45 moveto
234 69 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
230 89 moveto 20 0 rlineto 0 -12 rlineto -20 0 rlineto closepath
0.941 0.941 0.941 setrgbcolor AdjustColor
fill
230 89 moveto 20 0 rlineto 0 -12 rlineto -20 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
386 69 moveto
428 69 lineto
428 45 lineto
386 45 lineto
386 69 lineto
0.941 0.941 0.941 setrgbcolor AdjustColor
eofill
386 69 moveto
428 69 lineto
428 45 lineto
386 45 lineto
386 69 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
372 69 moveto
386 69 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
372 45 moveto
386 45 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
400 45 moveto
400 69 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
414 45 moveto
414 69 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
410 89 moveto 20 0 rlineto 0 -12 rlineto -20 0 rlineto closepath
0.941 0.941 0.941 setrgbcolor AdjustColor
fill
410 89 moveto 20 0 rlineto 0 -12 rlineto -20 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
matrix currentmatrix
390 137 translate 22 22 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.941 0.941 0.941 setrgbcolor AdjustColor
fill
matrix currentmatrix
390 137 translate 22 22 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
400 169 moveto
408 169 lineto
410 167 lineto
412 169 lineto
420 169 lineto
420 157 lineto
412 157 lineto
410 159 lineto
408 157 lineto
400 157 lineto
400 169 lineto
0.941 0.941 0.941 setrgbcolor AdjustColor
eofill
400 169 moveto
408 169 lineto
410 167 lineto
412 169 lineto
420 169 lineto
420 157 lineto
412 157 lineto
410 159 lineto
408 157 lineto
400 157 lineto
400 169 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
matrix currentmatrix
300 57 translate 22 22 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.941 0.941 0.941 setrgbcolor AdjustColor
fill
matrix currentmatrix
300 57 translate 22 22 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
310 89 moveto
318 89 lineto
320 87 lineto
322 89 lineto
330 89 lineto
330 77 lineto
322 77 lineto
320 79 lineto
318 77 lineto
310 77 lineto
310 89 lineto
0.941 0.941 0.941 setrgbcolor AdjustColor
eofill
310 89 moveto
318 89 lineto
320 87 lineto
322 89 lineto
330 89 lineto
330 77 lineto
322 77 lineto
320 79 lineto
318 77 lineto
310 77 lineto
310 89 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
matrix currentmatrix
480 57 translate 22 22 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.941 0.941 0.941 setrgbcolor AdjustColor
fill
matrix currentmatrix
480 57 translate 22 22 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
490 89 moveto
498 89 lineto
500 87 lineto
502 89 lineto
510 89 lineto
510 77 lineto
502 77 lineto
500 79 lineto
498 77 lineto
490 77 lineto
490 89 lineto
0.941 0.941 0.941 setrgbcolor AdjustColor
eofill
490 89 moveto
498 89 lineto
500 87 lineto
502 89 lineto
510 89 lineto
510 77 lineto
502 77 lineto
500 79 lineto
498 77 lineto
490 77 lineto
490 89 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
140 97 moveto
190 137 lineto
272.142530562696 137 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
277 137 moveto
266.999 140.501 lineto
268.713367323622 137.5 lineto
268.713367323622 136.5 lineto
266.999 133.499 lineto
277 137 lineto
fill
grestore
gsave
333 137 moveto
363.142530562696 137 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
368 137 moveto
357.999 140.501 lineto
359.713367323622 137.5 lineto
359.713367323622 136.5 lineto
357.999 133.499 lineto
368 137 lineto
fill
grestore
gsave
140 97 moveto
188.149853197651 59.9616513864225 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
192 57 moveto
186.2075648587 65.872693905113 lineto
185.736671532229 62.4487611085488 lineto
185.12696077138 61.6561371194442 lineto
181.93837011123 60.3227407334026 lineto
192 57 lineto
fill
grestore
gsave
248 57 moveto
273.142530562696 57 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
278 57 moveto
267.999 60.501 lineto
269.713367323622 57.5 lineto
269.713367323622 56.5 lineto
267.999 53.499 lineto
278 57 lineto
fill
grestore
gsave
322 57 moveto
367.142530562696 57 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
372 57 moveto
361.999 60.501 lineto
363.713367323622 57.5 lineto
363.713367323622 56.5 lineto
361.999 53.499 lineto
372 57 lineto
fill
grestore
gsave
428 57 moveto
453.142530562696 57 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
458 57 moveto
447.999 60.501 lineto
449.713367323622 57.5 lineto
449.713367323622 56.5 lineto
447.999 53.499 lineto
458 57 lineto
fill
grestore
gsave
502 57 moveto
556.979431266974 94.2741906894738 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
561 97 moveto
550.757472087613 94.2856632552346 lineto
553.860504560327 92.7637415116518 lineto
554.421662864194 91.9360330134471 lineto
554.686702531295 88.4900483508048 lineto
561 97 lineto
fill
grestore
gsave
412 137 moveto
505 137 lineto
557.047314533502 99.8233467617841 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
561 97 moveto
554.896766470672 105.661844058079 lineto
554.547508724495 102.223374144435 lineto
553.966270530776 101.409640673228 lineto
550.826936638251 99.9640822926899 lineto
561 97 lineto
fill
grestore
gsave
/.sfNsText findfont 13 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
220 32 [
[(queue 3 [atomic])]
] 16 -0.5 0.5 0 false DrawText
grestore
gsave
/.sfNsText findfont 13 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
400 32 [
[(queue 3 [atomic])]
] 16 -0.5 0.5 0 false DrawText
grestore
gsave
/.sfNsText findfont 13 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
300 112 [
[(queue 1 [parallel])]
] 16 -0.5 0.5 0 false DrawText
grestore
gsave
/.sfNsText findfont 13 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
390 137 [
[(eo1)]
] 16 -0.5 0.5 0 false DrawText
grestore
gsave
/.sfNsText findfont 13 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
300 57 [
[(eo2)]
] 16 -0.5 0.5 0 false DrawText
grestore
gsave
/.sfNsText findfont 13 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
480 57 [
[(eo3)]
] 16 -0.5 0.5 0 false DrawText
grestore
restore showpage

%%Trailer
end
%%EOF
