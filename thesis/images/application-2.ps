%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Tk Canvas Widget
%%For: Kristian Hartikainen
%%Title: Window .top.draw.canvas
%%CreationDate: Tue Oct 27 10:49:00 2015
%%BoundingBox: -22 312 636 482
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%DocumentNeededResources: font .sfNsText
%%EndComments

%%BeginProlog
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def

50 dict begin
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% RCS: @(#) $Id$

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


/cstringshow {
    {
	dup type /stringtype eq
	{ show } { glyphshow }
	ifelse
    }
    forall
} bind def



/cstringwidth {
    0 exch 0 exch
    {
	dup type /stringtype eq
	{ stringwidth } { 
	    currentfont /Encoding get exch 1 exch put (\001) stringwidth 
        }
	ifelse 
	exch 3 1 roll add 3 1 roll add exch
    }
    forall
} bind def

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to current system encoding.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding CurrentEncoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	cstringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup cstringwidth pop
	justify neg mul 0 moveto
	stipple {
	   
 
	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		dup type /stringtype eq {
		    % This segment is a string.
		    {
		        char 0 3 -1 roll put
		        currentpoint
		        gsave
		        char true charpath clip StippleText
		        grestore
		        char stringwidth translate
		        moveto
		    } forall
		} {
		    % This segment is glyph name
		    % Temporary override
		    currentfont /Encoding get exch 1 exch put
		    currentpoint
		    gsave (\001) true charpath clip StippleText
		    grestore
	            (\001) stringwidth translate
		    moveto
		} ifelse
	    } forall
	    grestore 
	} {cstringshow} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog
%%BeginSetup
/CL 2 def
%%IncludeResource: font .sfNsText
%%EndSetup

%%Page: 1 1
save
306.0 396.0 translate
1 1 scale
-328 -84 translate
0 169 moveto 657 169 lineto 657 0 lineto 0 0 lineto closepath clip newpath
gsave
126 101 moveto
168 101 lineto
168 77 lineto
126 77 lineto
126 101 lineto
0.941 0.941 0.941 setrgbcolor AdjustColor
eofill
126 101 moveto
168 101 lineto
168 77 lineto
126 77 lineto
126 101 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
112 101 moveto
126 101 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
112 77 moveto
126 77 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
140 77 moveto
140 101 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
154 77 moveto
154 101 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
150 121 moveto 20 0 rlineto 0 -12 rlineto -20 0 rlineto closepath
0.941 0.941 0.941 setrgbcolor AdjustColor
fill
150 121 moveto 20 0 rlineto 0 -12 rlineto -20 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
matrix currentmatrix
220 89 translate 22 22 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.941 0.941 0.941 setrgbcolor AdjustColor
fill
matrix currentmatrix
220 89 translate 22 22 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
230 121 moveto
238 121 lineto
240 119 lineto
242 121 lineto
250 121 lineto
250 109 lineto
242 109 lineto
240 111 lineto
238 109 lineto
230 109 lineto
230 121 lineto
0.941 0.941 0.941 setrgbcolor AdjustColor
eofill
230 121 moveto
238 121 lineto
240 119 lineto
242 121 lineto
250 121 lineto
250 109 lineto
242 109 lineto
240 111 lineto
238 109 lineto
230 109 lineto
230 121 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
20 107 moveto
20 71 lineto
70 71 lineto
80 89 lineto
70 107 lineto
20 107 lineto
0.941 0.941 0.941 setrgbcolor AdjustColor
eofill
20 107 moveto
20 71 lineto
70 71 lineto
80 89 lineto
70 107 lineto
20 107 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
matrix currentmatrix
460 49 translate 22 22 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.941 0.941 0.941 setrgbcolor AdjustColor
fill
matrix currentmatrix
460 49 translate 22 22 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
470 81 moveto
478 81 lineto
480 79 lineto
482 81 lineto
490 81 lineto
490 69 lineto
482 69 lineto
480 71 lineto
478 69 lineto
470 69 lineto
470 81 lineto
0.941 0.941 0.941 setrgbcolor AdjustColor
eofill
470 81 moveto
478 81 lineto
480 79 lineto
482 81 lineto
490 81 lineto
490 69 lineto
482 69 lineto
480 71 lineto
478 69 lineto
470 69 lineto
470 81 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
280.05 89 moveto
319.95 112.009 lineto
319.95 65.991 lineto
280.05 89 lineto
0.941 0.941 0.941 setrgbcolor AdjustColor
eofill
280.05 89 moveto
319.95 112.009 lineto
319.95 65.991 lineto
280.05 89 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
630 107 moveto
630 71 lineto
570 71 lineto
580 89 lineto
570 107 lineto
630 107 lineto
0.941 0.941 0.941 setrgbcolor AdjustColor
eofill
630 107 moveto
630 71 lineto
570 71 lineto
580 89 lineto
570 107 lineto
630 107 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
matrix currentmatrix
460 129 translate 22 22 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.941 0.941 0.941 setrgbcolor AdjustColor
fill
matrix currentmatrix
460 129 translate 22 22 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
470 161 moveto
478 161 lineto
480 159 lineto
482 161 lineto
490 161 lineto
490 149 lineto
482 149 lineto
480 151 lineto
478 149 lineto
470 149 lineto
470 161 lineto
0.941 0.941 0.941 setrgbcolor AdjustColor
eofill
470 161 moveto
478 161 lineto
480 159 lineto
482 161 lineto
490 161 lineto
490 149 lineto
482 149 lineto
480 151 lineto
478 149 lineto
470 149 lineto
470 161 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
559.95 89 moveto
520.05 112.009 lineto
520.05 65.991 lineto
559.95 89 lineto
0.941 0.941 0.941 setrgbcolor AdjustColor
eofill
559.95 89 moveto
520.05 112.009 lineto
520.05 65.991 lineto
559.95 89 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
366 61 moveto
408 61 lineto
408 37 lineto
366 37 lineto
366 61 lineto
0.941 0.941 0.941 setrgbcolor AdjustColor
eofill
366 61 moveto
408 61 lineto
408 37 lineto
366 37 lineto
366 61 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
352 61 moveto
366 61 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
352 37 moveto
366 37 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
380 37 moveto
380 61 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
394 37 moveto
394 61 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
390 81 moveto 20 0 rlineto 0 -12 rlineto -20 0 rlineto closepath
0.941 0.941 0.941 setrgbcolor AdjustColor
fill
390 81 moveto 20 0 rlineto 0 -12 rlineto -20 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
366 141 moveto
408 141 lineto
408 117 lineto
366 117 lineto
366 141 lineto
0.941 0.941 0.941 setrgbcolor AdjustColor
eofill
366 141 moveto
408 141 lineto
408 117 lineto
366 117 lineto
366 141 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
352 141 moveto
366 141 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
352 117 moveto
366 117 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
380 117 moveto
380 141 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
394 117 moveto
394 141 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
390 161 moveto 20 0 rlineto 0 -12 rlineto -20 0 rlineto closepath
0.941 0.941 0.941 setrgbcolor AdjustColor
fill
390 161 moveto 20 0 rlineto 0 -12 rlineto -20 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
482 49 moveto
516.702108865101 85.480534943602 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
520.05 89 moveto
510.620417993614 84.1667831432022 lineto
513.976369072539 83.3405575831004 lineto
514.700916103009 82.6513322203657 lineto
515.693696300966 79.3408271533334 lineto
520.05 89 lineto
fill
grestore
gsave
319.95 89 moveto
348.962674500359 52.7907338529062 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
352 49 moveto
348.47863289236 58.9938468916245 lineto
347.208650490123 55.7794727661829 lineto
346.42825775645 55.1541830883281 lineto
343.014322971188 54.6155685672853 lineto
352 49 lineto
fill
grestore
gsave
559.95 89 moveto
575.142530562696 89 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
580 89 moveto
569.999 92.501 lineto
571.713367323622 89.5 lineto
571.713367323622 88.5 lineto
569.999 85.499 lineto
580 89 lineto
fill
grestore
gsave
408 49 moveto
433.142530562696 49 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
438 49 moveto
427.999 52.501 lineto
429.713367323622 49.5 lineto
429.713367323622 48.5 lineto
427.999 45.499 lineto
438 49 lineto
fill
grestore
gsave
319.95 89 moveto
348.962674500359 125.209266147094 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
352 129 moveto
343.014322971188 123.384431432715 lineto
346.42825775645 122.845816911672 lineto
347.208650490123 122.220527233817 lineto
348.47863289236 119.006153108375 lineto
352 129 lineto
fill
grestore
gsave
80 89 moveto
107.142530562696 89 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
112 89 moveto
101.999 92.501 lineto
103.713367323622 89.5 lineto
103.713367323622 88.5 lineto
101.999 85.499 lineto
112 89 lineto
fill
grestore
gsave
408 129 moveto
433.142530562696 129 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
438 129 moveto
427.999 132.501 lineto
429.713367323622 129.5 lineto
429.713367323622 128.5 lineto
427.999 125.499 lineto
438 129 lineto
fill
grestore
gsave
168 89 moveto
193.142530562696 89 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
198 89 moveto
187.999 92.501 lineto
189.713367323622 89.5 lineto
189.713367323622 88.5 lineto
187.999 85.499 lineto
198 89 lineto
fill
grestore
gsave
482 129 moveto
516.702108865101 92.519465056398 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
520.05 89 moveto
515.693696300966 98.6591728466666 lineto
514.700916103009 95.3486677796343 lineto
513.976369072539 94.6594424168996 lineto
510.620417993614 93.8332168567978 lineto
520.05 89 lineto
fill
grestore
gsave
242 89 moveto
275.192530562696 89 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
280.05 89 moveto
270.049 92.501 lineto
271.763367323622 89.5 lineto
271.763367323622 88.5 lineto
270.049 85.499 lineto
280.05 89 lineto
fill
grestore
gsave
/.sfNsText findfont 13 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
140 69 [
[(parallel 3)]
] 16 -0.5 0.5 0 false DrawText
grestore
gsave
/.sfNsText findfont 13 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
220 89 [
[(eo1)]
] 16 -0.5 0.5 0 false DrawText
grestore
gsave
/.sfNsText findfont 13 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
45 119 [
[(IN)]
] 16 -0.5 0.5 0 false DrawText
grestore
gsave
/.sfNsText findfont 13 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
460 49 [
[(eo3)]
] 16 -0.5 0.5 0 false DrawText
grestore
gsave
/.sfNsText findfont 13 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
306 88 [
[(fork)]
] 16 -0.5 0.5 0 false DrawText
grestore
gsave
/.sfNsText findfont 13 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
600 119 [
[(OUT)]
] 16 -0.5 0.5 0 false DrawText
grestore
gsave
/.sfNsText findfont 13 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
460 129 [
[(eo2)]
] 16 -0.5 0.5 0 false DrawText
grestore
gsave
/.sfNsText findfont 13 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
535 89 [
[(join)]
] 16 -0.5 0.5 0 false DrawText
grestore
gsave
/.sfNsText findfont 13 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
380 29 [
[(parallel 2)]
] 16 -0.5 0.5 0 false DrawText
grestore
gsave
/.sfNsText findfont 13 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
380 109 [
[(atomic 1)]
] 16 -0.5 0.5 0 false DrawText
grestore
restore showpage

%%Trailer
end
%%EOF
